# ==================== LOGGING AND LED CONTROL ====================
# ==================== macros/logging.cfg ====================
# Unified logging system with LED status integration

[gcode_macro _LOG_STATUS]
description: Consistent status logging with display, console output, and LED status
gcode:
    {% set msg = params.MSG|default("Status update")|string %}
    {% set led_status = params.LED|default("")|string %}
    
    M117 {msg}
    RESPOND TYPE=echo MSG="STATUS: {msg}"
    
    # Only change LED if no pulse is active, LED status is specified, and it's a valid color
    {% if led_status != "" and not printer["gcode_macro _led_vars"].pulse_active and led_status in printer["gcode_macro _led_vars"].colors %}
        _set_hotend_led_by_name COLOR={led_status}
    {% endif %}

[gcode_macro _LOG_ERROR]
description: Error logging with display, console output, and error LED
gcode:
    {% set msg = params.MSG|default("Error occurred")|string %}
    
    M117 ERROR: {msg}
    RESPOND TYPE=error MSG="ERROR: {msg}"
    # Stop any pulse for errors
    _stop_led_pulse
    status_error

[gcode_macro _LOG_WARNING]
description: Warning logging with display, console output, and LED status
gcode:
    {% set msg = params.MSG|default("Warning")|string %}
    {% set led_status = params.LED|default("ready")|string %}
    
    M117 WARNING: {msg}
    RESPOND TYPE=echo MSG="WARNING: {msg}"
    
    # Only change LED if no pulse is active and it's a valid color
    {% if not printer["gcode_macro _led_vars"].pulse_active and led_status in printer["gcode_macro _led_vars"].colors %}
        _set_hotend_led_by_name COLOR={led_status}
    {% endif %}

[gcode_macro mainled_on]
gcode:
    SET_LED LED=main_led WHITE=1

[gcode_macro mainled_off]
gcode:
    SET_LED LED=main_led WHITE=0