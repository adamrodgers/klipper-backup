# ==================== CHAMBER TEMPERATURE CONTROL ====================
# ==================== macros/chamber.cfg ====================
# Chamber heating, temperature control, and heat soak operations

[gcode_macro M141]
description: Set chamber temperature
gcode:
    {% set target_temp = params.S|default(0)|float %}
    SET_GCODE_VARIABLE MACRO=_CHAMBER_CONTROL VARIABLE=target_temp VALUE={target_temp}
    {% if target_temp == 0 %}
        _LOG_STATUS MSG="Chamber heating disabled"
    {% else %}
        _LOG_STATUS MSG="Chamber target temperature set to {target_temp}째C"
    {% endif %}

[gcode_macro M191]
description: Wait for chamber temperature with pulsing
gcode:
    {% set target_temp = params.S|default(0)|float %}
    {% if target_temp == 0 %}
        _LOG_STATUS MSG="Chamber heating disabled" LED=ready
    {% else %}
        {% set current_temp = printer["temperature_sensor chamber"].temperature %}
        
        {% if target_temp <= current_temp %}
            _LOG_STATUS MSG="Chamber already at target" LED=ready
        {% else %}
            # Start pulsing during chamber heating
            status_heating PULSE=1
            _LOG_STATUS MSG="Waiting for chamber to reach {target_temp}째C"
            
            _CHAMBER_HEAT_AND_WAIT TARGET={target_temp}
            
            # Stop pulsing when done
            status_ready
            _LOG_STATUS MSG="Chamber reached target temperature"
        {% endif %}
    {% endif %}

[gcode_macro _CHAMBER_CONTROL]
description: Chamber control state variable
variable_target_temp: 0
gcode:

[gcode_macro _CHAMBER_HEAT_AND_WAIT]
description: Chamber heating with progress updates
gcode:
    {% set target_temp = params.TARGET|float %}
    {% set current_temp = printer["temperature_sensor chamber"].temperature %}
    
    {% set temp_diff = target_temp - current_temp %}
    {% if temp_diff > 10 %}
        {% set progress_interval = 5 %}
        {% set next_milestone = (current_temp + progress_interval)|round(0) %}
        
        {% for milestone in range(next_milestone|int, target_temp|int, progress_interval) %}
            M117 Chamber: {milestone}째C / {target_temp}째C
            TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={milestone}
        {% endfor %}
    {% endif %}
    
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={target_temp}

[gcode_macro _HEAT_SOAK_CHAMBER]
description: Simplified heat soak with pulsing
gcode:
    {% set bedtemp = params.BED_TEMP|int %}
    {% set material = params.MATERIAL|default("PLA")|string|upper %}
    {% set chamber_target = params.CHAMBER|float %}
    {% set heatsoak_time = printer['gcode_macro _global_var'].heat_soak_time|default(3)|int %}
    
    {% set current_chamber_temp = printer["temperature_sensor chamber"].temperature %}
    
    {% if material == "PLA" or material == "PETG" %}
        # Simple heat soak with pulsing for PLA/PETG
        status_heating PULSE=1
        _LOG_STATUS MSG="{material} heat soak ({heatsoak_time} min)"
        G4 P{heatsoak_time * 60 * 1000}
        status_ready
        M104 S150
        
    {% elif chamber_target == 0 %}
        _LOG_STATUS MSG="{material} printing - no chamber heating required" LED=ready
        
    {% else %}
        {% if current_chamber_temp >= chamber_target %}
            # Already at temp, just do material soak with pulsing
            status_heating PULSE=1
            _LOG_STATUS MSG="Chamber at temp - {material} soak ({heatsoak_time} min)"
            G4 P{heatsoak_time * 60 * 1000}
            status_ready
        {% else %}
            # Need to heat chamber - use pulsing
            status_heating PULSE=1
            _LOG_STATUS MSG="Heating chamber for {material}"
            
            M140 S{[bedtemp, 100]|min}
            
            # Start nevermore for chamber heating
            {% set nevermore_chamber_speed = printer['gcode_macro _NEVERMORE_VARS'].slow|float %}
            SET_FAN_SPEED FAN=nevermore_fans SPEED={nevermore_chamber_speed}
            
            TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber_target}
            
            # Set nevermore for printing (or off for PLA/PETG)
            {% if material not in ["PLA", "PETG"] %}
                {% set nevermore_print_speed = printer['gcode_macro _NEVERMORE_VARS'].fast|float %}
                SET_FAN_SPEED FAN=nevermore_fans SPEED={nevermore_print_speed}
            {% else %}
                SET_FAN_SPEED FAN=nevermore_fans SPEED=0
            {% endif %}
            
            status_ready
            _LOG_STATUS MSG="Chamber heating completed"
        {% endif %}
    {% endif %}